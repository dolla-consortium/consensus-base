-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Librairies used to support the consensus microservices.
--   
--   This package contains all the functionalities commonly used accross
--   the different microservices of the consensus algorithm.
@package dolla-consensus-base
@version 1.0.0

module Dolla.Consensus.Consortium.Block
data ConsortiumEventBlock
ConsortiumEventBlock :: OffsetRange -> UUID -> ConsortiumEventBlock
[$sel:eventRange:ConsortiumEventBlock] :: ConsortiumEventBlock -> OffsetRange
[$sel:eventsHash:ConsortiumEventBlock] :: ConsortiumEventBlock -> UUID
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Consortium.Block.ConsortiumEventBlock
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Consortium.Block.ConsortiumEventBlock
instance GHC.Generics.Generic Dolla.Consensus.Consortium.Block.ConsortiumEventBlock
instance GHC.Show.Show Dolla.Consensus.Consortium.Block.ConsortiumEventBlock
instance GHC.Classes.Eq Dolla.Consensus.Consortium.Block.ConsortiumEventBlock

module Dolla.Consensus.Consortium.Event
data Event
ConsortiumMembershipGranted :: NodeId -> Event
[$sel:nodeId:ConsortiumMembershipGranted] :: Event -> NodeId
ConsortiumMembershipRevoked :: NodeId -> Event
[$sel:nodeId:ConsortiumMembershipGranted] :: Event -> NodeId
TeamLocated :: NodeId -> URL -> URL -> URL -> URL -> Event
[$sel:nodeId:ConsortiumMembershipGranted] :: Event -> NodeId
[$sel:statusServerUrl:ConsortiumMembershipGranted] :: Event -> URL
[$sel:downloadServerUrl:ConsortiumMembershipGranted] :: Event -> URL
[$sel:votingBroadcastUrl:ConsortiumMembershipGranted] :: Event -> URL
[$sel:receptionistUrl:ConsortiumMembershipGranted] :: Event -> URL
TeamReLocated :: NodeId -> URL -> URL -> URL -> URL -> Event
[$sel:nodeId:ConsortiumMembershipGranted] :: Event -> NodeId
[$sel:statusServerUrl:ConsortiumMembershipGranted] :: Event -> URL
[$sel:downloadServerUrl:ConsortiumMembershipGranted] :: Event -> URL
[$sel:votingBroadcastUrl:ConsortiumMembershipGranted] :: Event -> URL
[$sel:receptionistUrl:ConsortiumMembershipGranted] :: Event -> URL
ProposalSizeLimited :: Byte -> Event
[$sel:size:ConsortiumMembershipGranted] :: Event -> Byte
BlockCreated :: Offset -> Event
[$sel:blockOffset:ConsortiumMembershipGranted] :: Event -> Offset
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Consortium.Event.Event
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Consortium.Event.Event
instance GHC.Generics.Generic Dolla.Consensus.Consortium.Event.Event
instance GHC.Show.Show Dolla.Consensus.Consortium.Event.Event
instance GHC.Classes.Eq Dolla.Consensus.Consortium.Event.Event
instance Dolla.Libraries.LogEngine.Appendable.Appendable Dolla.Consensus.Consortium.Event.Event

module Dolla.Consensus.Consortium.Projections
data Location
Location :: URL -> URL -> URL -> URL -> Location
[$sel:statusServerUrl:Location] :: Location -> URL
[$sel:downloadServerUrl:Location] :: Location -> URL
[$sel:votingBroadcastUrl:Location] :: Location -> URL
[$sel:receptionistUrl:Location] :: Location -> URL
data ActiveNodeIds
ActiveNodeIds :: Offset -> [(NodeId, Location)] -> ActiveNodeIds
[$sel:blockInProgress:ActiveNodeIds] :: ActiveNodeIds -> Offset
[$sel:locations:ActiveNodeIds] :: ActiveNodeIds -> [(NodeId, Location)]
toActiveNodeIds :: (MonadIO m, MonadReader r m, MonadState ConsortiumState m) => (r -> (Logger, NodeId)) -> SerialT m Event -> SerialT m ActiveNodeIds
data NodeIdsForBlock
NodeIdsForBlock :: Offset -> [NodeId] -> NodeIdsForBlock
[$sel:blockInProgress:NodeIdsForBlock] :: NodeIdsForBlock -> Offset
[$sel:nodeIds:NodeIdsForBlock] :: NodeIdsForBlock -> [NodeId]
mapToNodeIdList :: (MonadAsync m, MonadReader r m) => (r -> (Logger, NodeId)) -> SerialT m Event -> SerialT m NodeIdsForBlock
data ConsortiumState
ConsortiumState :: Offset -> HashMap NodeId Int -> Maybe Byte -> IntMap (NodeId, MembershipStatus, LocationStatus) -> ConsortiumState
[$sel:blockCreated:ConsortiumState] :: ConsortiumState -> Offset
[$sel:nodeIndexes:ConsortiumState] :: ConsortiumState -> HashMap NodeId Int
[$sel:proposalSizeLimitMaybe:ConsortiumState] :: ConsortiumState -> Maybe Byte
[$sel:nodeStates:ConsortiumState] :: ConsortiumState -> IntMap (NodeId, MembershipStatus, LocationStatus)
data MembershipStatus
Granted :: MembershipStatus
Revoked :: MembershipStatus
data LocationStatus
NoLocation :: LocationStatus
Located :: Location -> LocationStatus
toConsortiumState' :: (MonadIO m, MonadReader r m, MonadState ConsortiumState m) => (r -> (Logger, NodeId)) -> SerialT m Event -> SerialT m ConsortiumState
initialConsortiumState :: ConsortiumState
instance GHC.Show.Show Dolla.Consensus.Consortium.Projections.ConsortiumState
instance GHC.Show.Show Dolla.Consensus.Consortium.Projections.LocationStatus
instance GHC.Classes.Eq Dolla.Consensus.Consortium.Projections.LocationStatus
instance GHC.Show.Show Dolla.Consensus.Consortium.Projections.MembershipStatus
instance GHC.Classes.Eq Dolla.Consensus.Consortium.Projections.MembershipStatus
instance GHC.Show.Show Dolla.Consensus.Consortium.Projections.NodeIdsForBlock
instance GHC.Show.Show Dolla.Consensus.Consortium.Projections.ActiveNodeIds
instance GHC.Show.Show Dolla.Consensus.Consortium.Projections.Location
instance GHC.Classes.Eq Dolla.Consensus.Consortium.Projections.Location

module Dolla.Consensus.Consortium.Request
data ConsortiumRequest
GrantConsortiumMembership :: UUID -> UUID -> ConsortiumRequest
[$sel:requestId:GrantConsortiumMembership] :: ConsortiumRequest -> UUID
[$sel:teamId:GrantConsortiumMembership] :: ConsortiumRequest -> UUID
RevokeConsortiumMembership :: UUID -> UUID -> ConsortiumRequest
[$sel:requestId:GrantConsortiumMembership] :: ConsortiumRequest -> UUID
[$sel:teamId:GrantConsortiumMembership] :: ConsortiumRequest -> UUID
LocateTeam :: UUID -> UUID -> URL -> ConsortiumRequest
[$sel:requestId:GrantConsortiumMembership] :: ConsortiumRequest -> UUID
[$sel:teamId:GrantConsortiumMembership] :: ConsortiumRequest -> UUID
[$sel:url:GrantConsortiumMembership] :: ConsortiumRequest -> URL
ReLocateTeam :: UUID -> UUID -> URL -> ConsortiumRequest
[$sel:requestId:GrantConsortiumMembership] :: ConsortiumRequest -> UUID
[$sel:teamId:GrantConsortiumMembership] :: ConsortiumRequest -> UUID
[$sel:url:GrantConsortiumMembership] :: ConsortiumRequest -> URL
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Consortium.Request.ConsortiumRequest
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Consortium.Request.ConsortiumRequest
instance GHC.Generics.Generic Dolla.Consensus.Consortium.Request.ConsortiumRequest
instance GHC.Show.Show Dolla.Consensus.Consortium.Request.ConsortiumRequest
instance GHC.Classes.Eq Dolla.Consensus.Consortium.Request.ConsortiumRequest
instance Dolla.Libraries.LogEngine.Appendable.Appendable Dolla.Consensus.Consortium.Request.ConsortiumRequest
instance Dolla.Common.UUID.Provider.UUIDProvider Dolla.Consensus.Consortium.Request.ConsortiumRequest
instance Data.Hashable.Class.Hashable Dolla.Consensus.Consortium.Request.ConsortiumRequest

module Dolla.Consensus.Dummy.Client.Block
data ClientEventBlock
ClientEventBlock :: OffsetRange -> UUID -> ClientEventBlock
[$sel:eventRange:ClientEventBlock] :: ClientEventBlock -> OffsetRange
[$sel:eventsHash:ClientEventBlock] :: ClientEventBlock -> UUID
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Dummy.Client.Block.ClientEventBlock
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Dummy.Client.Block.ClientEventBlock
instance GHC.Generics.Generic Dolla.Consensus.Dummy.Client.Block.ClientEventBlock
instance GHC.Show.Show Dolla.Consensus.Dummy.Client.Block.ClientEventBlock
instance GHC.Classes.Eq Dolla.Consensus.Dummy.Client.Block.ClientEventBlock

module Dolla.Consensus.Dummy.Client.Event
data Event
Input :: Address -> Address -> Integer -> Event
[$sel:source:Input] :: Event -> Address
[$sel:destination:Input] :: Event -> Address
[$sel:amount:Input] :: Event -> Integer
Output :: Address -> Address -> Integer -> Event
[$sel:source:Input] :: Event -> Address
[$sel:destination:Input] :: Event -> Address
[$sel:amount:Input] :: Event -> Integer
BlockCreated :: Offset -> Event
[$sel:blockOffset:Input] :: Event -> Offset
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Dummy.Client.Event.Event
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Dummy.Client.Event.Event
instance GHC.Generics.Generic Dolla.Consensus.Dummy.Client.Event.Event
instance GHC.Show.Show Dolla.Consensus.Dummy.Client.Event.Event
instance GHC.Classes.Eq Dolla.Consensus.Dummy.Client.Event.Event
instance Dolla.Libraries.LogEngine.Appendable.Appendable Dolla.Consensus.Dummy.Client.Event.Event

module Dolla.Consensus.Dummy.Client.Request
data ClientRequest
SpendMoney :: UUID -> Address -> Address -> Integer -> ClientRequest
[$sel:commandId:SpendMoney] :: ClientRequest -> UUID
[$sel:source:SpendMoney] :: ClientRequest -> Address
[$sel:destination:SpendMoney] :: ClientRequest -> Address
[$sel:amount:SpendMoney] :: ClientRequest -> Integer
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Dummy.Client.Request.ClientRequest
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Dummy.Client.Request.ClientRequest
instance GHC.Generics.Generic Dolla.Consensus.Dummy.Client.Request.ClientRequest
instance GHC.Show.Show Dolla.Consensus.Dummy.Client.Request.ClientRequest
instance GHC.Classes.Eq Dolla.Consensus.Dummy.Client.Request.ClientRequest
instance Data.Hashable.Class.Hashable Dolla.Consensus.Dummy.Client.Request.ClientRequest
instance Dolla.Libraries.LogEngine.Appendable.Appendable Dolla.Consensus.Dummy.Client.Request.ClientRequest
instance Dolla.Common.UUID.Provider.UUIDProvider Dolla.Consensus.Dummy.Client.Request.ClientRequest

module Dolla.Consensus.Proposal.Proposal
data Packet request
Packet :: Header -> [request] -> Footer -> Packet request
[$sel:header:Packet] :: Packet request -> Header
[$sel:body:Packet] :: Packet request -> [request]
[$sel:footer:Packet] :: Packet request -> Footer
data Proposal request
Proposal :: Header -> [request] -> Proposal request
[$sel:header:Proposal] :: Proposal request -> Header
[$sel:body:Proposal] :: Proposal request -> [request]
data Envelope
Envelope :: Header -> Footer -> Envelope
[$sel:header:Envelope] :: Envelope -> Header
[$sel:footer:Envelope] :: Envelope -> Footer
data Header
Header :: Offset -> ProposerId -> Header
[$sel:blockOffset:Header] :: Header -> Offset
[$sel:proposerId:Header] :: Header -> ProposerId
newtype Footer
Footer :: UUID -> Footer
[$sel:bodyAndHeaderHash:Footer] :: Footer -> UUID
instance Data.Aeson.Types.FromJSON.FromJSON request => Data.Aeson.Types.FromJSON.FromJSON (Dolla.Consensus.Proposal.Proposal.Packet request)
instance Data.Aeson.Types.ToJSON.ToJSON request => Data.Aeson.Types.ToJSON.ToJSON (Dolla.Consensus.Proposal.Proposal.Packet request)
instance GHC.Generics.Generic (Dolla.Consensus.Proposal.Proposal.Packet request)
instance GHC.Show.Show request => GHC.Show.Show (Dolla.Consensus.Proposal.Proposal.Packet request)
instance GHC.Classes.Eq request => GHC.Classes.Eq (Dolla.Consensus.Proposal.Proposal.Packet request)
instance Data.Aeson.Types.FromJSON.FromJSON request => Data.Aeson.Types.FromJSON.FromJSON (Dolla.Consensus.Proposal.Proposal.Proposal request)
instance Data.Aeson.Types.ToJSON.ToJSON request => Data.Aeson.Types.ToJSON.ToJSON (Dolla.Consensus.Proposal.Proposal.Proposal request)
instance GHC.Generics.Generic (Dolla.Consensus.Proposal.Proposal.Proposal request)
instance GHC.Show.Show request => GHC.Show.Show (Dolla.Consensus.Proposal.Proposal.Proposal request)
instance GHC.Classes.Eq request => GHC.Classes.Eq (Dolla.Consensus.Proposal.Proposal.Proposal request)
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Proposal.Proposal.Envelope
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Proposal.Proposal.Envelope
instance GHC.Generics.Generic Dolla.Consensus.Proposal.Proposal.Envelope
instance GHC.Show.Show Dolla.Consensus.Proposal.Proposal.Envelope
instance GHC.Classes.Eq Dolla.Consensus.Proposal.Proposal.Envelope
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Proposal.Proposal.Header
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Proposal.Proposal.Header
instance GHC.Generics.Generic Dolla.Consensus.Proposal.Proposal.Header
instance GHC.Show.Show Dolla.Consensus.Proposal.Proposal.Header
instance GHC.Classes.Eq Dolla.Consensus.Proposal.Proposal.Header
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Proposal.Proposal.Footer
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Proposal.Proposal.Footer
instance GHC.Generics.Generic Dolla.Consensus.Proposal.Proposal.Footer
instance GHC.Show.Show Dolla.Consensus.Proposal.Proposal.Footer
instance GHC.Classes.Eq Dolla.Consensus.Proposal.Proposal.Footer
instance Data.Hashable.Class.Hashable Dolla.Consensus.Proposal.Proposal.Envelope
instance Data.Hashable.Class.Hashable Dolla.Consensus.Proposal.Proposal.Header
instance Data.Hashable.Class.Hashable Dolla.Consensus.Proposal.Proposal.Footer

module Dolla.Consensus.Proposal.ProposalId
data ProposalId
ProposalId :: Offset -> Offset -> ProposerId -> ProposalId
[$sel:blockOffset:ProposalId] :: ProposalId -> Offset
[$sel:localBlockOffset:ProposalId] :: ProposalId -> Offset
[$sel:proposerId:ProposalId] :: ProposalId -> ProposerId
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Proposal.ProposalId.ProposalId
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Proposal.ProposalId.ProposalId
instance GHC.Generics.Generic Dolla.Consensus.Proposal.ProposalId.ProposalId
instance GHC.Show.Show Dolla.Consensus.Proposal.ProposalId.ProposalId
instance GHC.Classes.Eq Dolla.Consensus.Proposal.ProposalId.ProposalId
instance Data.Hashable.Class.Hashable Dolla.Consensus.Proposal.ProposalId.ProposalId

module Dolla.Consensus.Request
data RequestChannel
data Request
ClientReq :: ClientRequest -> Request
ConsortiumReq :: ConsortiumRequest -> Request
newtype RequestRange
RequestRange :: OffsetRange -> RequestRange
[$sel:range:RequestRange] :: RequestRange -> OffsetRange
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Request.RequestRange
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Request.RequestRange
instance GHC.Generics.Generic Dolla.Consensus.Request.RequestRange
instance GHC.Show.Show Dolla.Consensus.Request.RequestRange
instance GHC.Classes.Eq Dolla.Consensus.Request.RequestRange
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Request.RequestChannel
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Request.RequestChannel
instance GHC.Generics.Generic Dolla.Consensus.Request.RequestChannel
instance GHC.Show.Show Dolla.Consensus.Request.RequestChannel
instance GHC.Classes.Eq Dolla.Consensus.Request.RequestChannel
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Request.Request
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Request.Request
instance GHC.Generics.Generic Dolla.Consensus.Request.Request
instance GHC.Show.Show Dolla.Consensus.Request.Request
instance GHC.Classes.Eq Dolla.Consensus.Request.Request
instance Data.Hashable.Class.Hashable Dolla.Consensus.Request.RequestRange
instance Dolla.Libraries.LogEngine.Appendable.Appendable Dolla.Consensus.Request.Request
instance Dolla.Common.UUID.Provider.UUIDProvider Dolla.Consensus.Request.Request

module Dolla.Consensus.Voting.Auxiliary
newtype Auxiliary
Auxiliary :: Bool -> Auxiliary
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Voting.Auxiliary.Auxiliary
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Voting.Auxiliary.Auxiliary
instance GHC.Generics.Generic Dolla.Consensus.Voting.Auxiliary.Auxiliary
instance GHC.Show.Show Dolla.Consensus.Voting.Auxiliary.Auxiliary
instance GHC.Classes.Eq Dolla.Consensus.Voting.Auxiliary.Auxiliary

module Dolla.Consensus.Voting.Coordinator
newtype CoordinatorProposition
CoordinatorProposition :: Bool -> CoordinatorProposition
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Voting.Coordinator.CoordinatorProposition
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Voting.Coordinator.CoordinatorProposition
instance GHC.Generics.Generic Dolla.Consensus.Voting.Coordinator.CoordinatorProposition
instance GHC.Show.Show Dolla.Consensus.Voting.Coordinator.CoordinatorProposition
instance GHC.Classes.Eq Dolla.Consensus.Voting.Coordinator.CoordinatorProposition

module Dolla.Consensus.Voting.Decision
data Decision
Accepted :: Decision
Rejected :: Decision
decisionFromBool :: Bool -> Decision
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Voting.Decision.Decision
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Voting.Decision.Decision
instance GHC.Generics.Generic Dolla.Consensus.Voting.Decision.Decision
instance GHC.Show.Show Dolla.Consensus.Voting.Decision.Decision
instance GHC.Classes.Eq Dolla.Consensus.Voting.Decision.Decision

module Dolla.Consensus.Voting.Estimate
newtype Estimate
Estimate :: Bool -> Estimate
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Voting.Estimate.Estimate
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Voting.Estimate.Estimate
instance GHC.Generics.Generic Dolla.Consensus.Voting.Estimate.Estimate
instance GHC.Show.Show Dolla.Consensus.Voting.Estimate.Estimate
instance GHC.Classes.Eq Dolla.Consensus.Voting.Estimate.Estimate

module Dolla.Consensus.Voting.Round
newtype Round
Round :: Int -> Round
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Voting.Round.Round
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Voting.Round.Round
instance GHC.Classes.Ord Dolla.Consensus.Voting.Round.Round
instance GHC.Classes.Eq Dolla.Consensus.Voting.Round.Round
instance GHC.Real.Integral Dolla.Consensus.Voting.Round.Round
instance GHC.Real.Real Dolla.Consensus.Voting.Round.Round
instance GHC.Enum.Enum Dolla.Consensus.Voting.Round.Round
instance GHC.Num.Num Dolla.Consensus.Voting.Round.Round
instance GHC.Show.Show Dolla.Consensus.Voting.Round.Round

module Dolla.Consensus.Log.Aggregation
newtype ByBlockOffset
ByBlockOffset :: Offset -> ByBlockOffset
[$sel:blockOffset:ByBlockOffset] :: ByBlockOffset -> Offset
data ByProposer
ByProposer :: Offset -> ProposerId -> ByProposer
[$sel:blockOffset:ByProposer] :: ByProposer -> Offset
[$sel:proposerId:ByProposer] :: ByProposer -> ProposerId
data ByProposalBroadcaster
ByProposalBroadcaster :: Offset -> ProposerId -> BroadcasterId -> ByProposalBroadcaster
[$sel:blockOffset:ByProposalBroadcaster] :: ByProposalBroadcaster -> Offset
[$sel:proposerId:ByProposalBroadcaster] :: ByProposalBroadcaster -> ProposerId
[$sel:broadcasterId:ByProposalBroadcaster] :: ByProposalBroadcaster -> BroadcasterId
data ByBroadcaster
ByBroadcaster :: Offset -> BroadcasterId -> ByBroadcaster
[$sel:blockOffset:ByBroadcaster] :: ByBroadcaster -> Offset
[$sel:broadcasterId:ByBroadcaster] :: ByBroadcaster -> BroadcasterId
data ByVotingRound
ByVotingRound :: Offset -> ProposerId -> Round -> ByVotingRound
[$sel:blockOffset:ByVotingRound] :: ByVotingRound -> Offset
[$sel:proposerId:ByVotingRound] :: ByVotingRound -> ProposerId
[$sel:round:ByVotingRound] :: ByVotingRound -> Round
fromByVotingRoundToByProposer :: ByVotingRound -> ByProposer
class StreamNameTranslatable aggregation
toStreamName :: StreamNameTranslatable aggregation => aggregation -> String
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Log.Aggregation.ByVotingRound
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Log.Aggregation.ByVotingRound
instance GHC.Generics.Generic Dolla.Consensus.Log.Aggregation.ByVotingRound
instance GHC.Show.Show Dolla.Consensus.Log.Aggregation.ByVotingRound
instance GHC.Classes.Eq Dolla.Consensus.Log.Aggregation.ByVotingRound
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Log.Aggregation.ByBroadcaster
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Log.Aggregation.ByBroadcaster
instance GHC.Generics.Generic Dolla.Consensus.Log.Aggregation.ByBroadcaster
instance GHC.Show.Show Dolla.Consensus.Log.Aggregation.ByBroadcaster
instance GHC.Classes.Eq Dolla.Consensus.Log.Aggregation.ByBroadcaster
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Log.Aggregation.ByProposalBroadcaster
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Log.Aggregation.ByProposalBroadcaster
instance GHC.Generics.Generic Dolla.Consensus.Log.Aggregation.ByProposalBroadcaster
instance GHC.Show.Show Dolla.Consensus.Log.Aggregation.ByProposalBroadcaster
instance GHC.Classes.Eq Dolla.Consensus.Log.Aggregation.ByProposalBroadcaster
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Log.Aggregation.ByProposer
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Log.Aggregation.ByProposer
instance Data.Binary.Class.Binary Dolla.Consensus.Log.Aggregation.ByProposer
instance GHC.Generics.Generic Dolla.Consensus.Log.Aggregation.ByProposer
instance Data.Hashable.Class.Hashable Dolla.Consensus.Log.Aggregation.ByProposer
instance GHC.Show.Show Dolla.Consensus.Log.Aggregation.ByProposer
instance GHC.Classes.Eq Dolla.Consensus.Log.Aggregation.ByProposer
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Log.Aggregation.ByBlockOffset
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Log.Aggregation.ByBlockOffset
instance GHC.Generics.Generic Dolla.Consensus.Log.Aggregation.ByBlockOffset
instance GHC.Show.Show Dolla.Consensus.Log.Aggregation.ByBlockOffset
instance GHC.Classes.Eq Dolla.Consensus.Log.Aggregation.ByBlockOffset
instance Dolla.Consensus.Log.Aggregation.StreamNameTranslatable Dolla.Consensus.Log.Aggregation.ByBlockOffset
instance Dolla.Consensus.Log.Aggregation.StreamNameTranslatable Dolla.Consensus.Log.Aggregation.ByProposer
instance Dolla.Consensus.Log.Aggregation.StreamNameTranslatable Dolla.Consensus.Log.Aggregation.ByBroadcaster
instance Dolla.Consensus.Log.Aggregation.StreamNameTranslatable Dolla.Consensus.Log.Aggregation.ByProposalBroadcaster
instance Dolla.Consensus.Log.Aggregation.StreamNameTranslatable Dolla.Consensus.Log.Aggregation.ByVotingRound
instance Data.Aeson.Types.ToJSON.ToJSONKey Dolla.Consensus.Log.Aggregation.ByProposer
instance Data.Aeson.Types.FromJSON.FromJSONKey Dolla.Consensus.Log.Aggregation.ByProposer

module Dolla.Consensus.Voting.BinaryMessage
data BinaryMessage
AuxiliaryMessage :: ByVotingRound -> Auxiliary -> BinaryMessage
[$sel:byVotingRound:AuxiliaryMessage] :: BinaryMessage -> ByVotingRound
[$sel:auxiliary:AuxiliaryMessage] :: BinaryMessage -> Auxiliary
CoordinatorPropositionMessage :: ByVotingRound -> CoordinatorProposition -> BinaryMessage
[$sel:byVotingRound:AuxiliaryMessage] :: BinaryMessage -> ByVotingRound
[$sel:coordinatorProposition:AuxiliaryMessage] :: BinaryMessage -> CoordinatorProposition
EstimateMessage :: ByVotingRound -> Estimate -> BinaryMessage
[$sel:byVotingRound:AuxiliaryMessage] :: BinaryMessage -> ByVotingRound
[$sel:estimate:AuxiliaryMessage] :: BinaryMessage -> Estimate
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Voting.BinaryMessage.BinaryMessage
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Voting.BinaryMessage.BinaryMessage
instance GHC.Generics.Generic Dolla.Consensus.Voting.BinaryMessage.BinaryMessage
instance GHC.Show.Show Dolla.Consensus.Voting.BinaryMessage.BinaryMessage
instance GHC.Classes.Eq Dolla.Consensus.Voting.BinaryMessage.BinaryMessage
instance Dolla.Libraries.LogEngine.Appendable.Appendable Dolla.Consensus.Voting.BinaryMessage.BinaryMessage

module Dolla.Consensus.Proposal.Persistence
type ProposalRootFolder = FilePath
data Location
Local :: ProposalRootFolder -> Location
Broadcast :: ProposalRootFolder -> Location
read :: MonadIO m => Location -> ProposalId -> m ByteString
write :: MonadIO m => Location -> ProposalId -> ByteString -> m ()
moveLocalProposalIntoBroadcast :: MonadIO m => ProposalRootFolder -> ProposalId -> m ()
waitTillProposalDownloaded :: (MonadIO m, MonadCatch m) => Logger -> ProposalRootFolder -> ByProposer -> m FilePath
waitTillLocalProposalProduced :: (MonadIO m, MonadCatch m) => Logger -> ProposalRootFolder -> ByBlockOffset -> m FilePath

module Dolla.Consensus.Log.LogNameIndex
data LogIndex
ProposerInputLog :: LogIndex
ProposerOutputLog :: LogIndex
PBSyncedProposalMessageLog :: ByProposalBroadcaster -> LogIndex
PBSyncedProposalMessageMergedLog :: LogIndex
PBAlgorithmInput :: ByProposer -> LogIndex
PBAlgorithmOutput :: ByProposer -> LogIndex
PBAlgorithmOutputMergedLog :: LogIndex
MaestroInputLog :: ByBlockOffset -> LogIndex
MaestroOutputLog :: ByBlockOffset -> LogIndex
MaestroOutputMergedLog :: LogIndex
OrchestratorLifeCycleSPInputLog :: ByBlockOffset -> LogIndex
OrchestratorPersistedInputLog :: ByProposer -> LogIndex
OrchestratorPersistedOutputLog :: ByProposer -> LogIndex
OrchestratorPersistedOutputMergedLog :: LogIndex
OrchestratorTimedOutOutputLog :: ByProposer -> LogIndex
OrchestratorTimedOutOutputMergedLog :: LogIndex
BBOutGoingMessageLog :: ByBlockOffset -> LogIndex
BBSyncedMessageLog :: ByBroadcaster -> LogIndex
BBSyncedMessageMergedLog :: LogIndex
BBAlgorithmLifeCycleSPInputLog :: ByBlockOffset -> LogIndex
BBAlgorithmInputLog :: ByVotingRound -> LogIndex
BBAlgorithmOutputLog :: ByVotingRound -> LogIndex
BBAlgorithmOutputMergedLog :: LogIndex
TransactionOrderingInputLog :: ByBlockOffset -> LogIndex
TransactionMergingInputLog :: ByBlockOffset -> LogIndex
LocalRequestLog :: LogIndex
ClientMergedRequestLog :: LogIndex
ClientEventLog :: LogIndex
ConsortiumMergedRequestLog :: LogIndex
ConsortiumEventLog :: LogIndex
getStreamNameFromIndex :: LogIndex -> String

module Dolla.Consensus.Log.EventStoreLog
data LogIndex
ProposerInputLog :: LogIndex
ProposerOutputLog :: LogIndex
PBSyncedProposalMessageLog :: ByProposalBroadcaster -> LogIndex
PBSyncedProposalMessageMergedLog :: LogIndex
PBAlgorithmInput :: ByProposer -> LogIndex
PBAlgorithmOutput :: ByProposer -> LogIndex
PBAlgorithmOutputMergedLog :: LogIndex
MaestroInputLog :: ByBlockOffset -> LogIndex
MaestroOutputLog :: ByBlockOffset -> LogIndex
MaestroOutputMergedLog :: LogIndex
OrchestratorLifeCycleSPInputLog :: ByBlockOffset -> LogIndex
OrchestratorPersistedInputLog :: ByProposer -> LogIndex
OrchestratorPersistedOutputLog :: ByProposer -> LogIndex
OrchestratorPersistedOutputMergedLog :: LogIndex
OrchestratorTimedOutOutputLog :: ByProposer -> LogIndex
OrchestratorTimedOutOutputMergedLog :: LogIndex
BBOutGoingMessageLog :: ByBlockOffset -> LogIndex
BBSyncedMessageLog :: ByBroadcaster -> LogIndex
BBSyncedMessageMergedLog :: LogIndex
BBAlgorithmLifeCycleSPInputLog :: ByBlockOffset -> LogIndex
BBAlgorithmInputLog :: ByVotingRound -> LogIndex
BBAlgorithmOutputLog :: ByVotingRound -> LogIndex
BBAlgorithmOutputMergedLog :: LogIndex
TransactionOrderingInputLog :: ByBlockOffset -> LogIndex
TransactionMergingInputLog :: ByBlockOffset -> LogIndex
LocalRequestLog :: LogIndex
ClientMergedRequestLog :: LogIndex
ClientEventLog :: LogIndex
ConsortiumMergedRequestLog :: LogIndex
ConsortiumEventLog :: LogIndex
getEventStoreLog :: Dependencies -> LogIndex -> EventStoreLog item

module Dolla.Consensus.Voting.TimedOut
data TimedOut
CoordinatorPropositionPropagationWaitTimedOut :: ByVotingRound -> TimedOut
[$sel:byVotingRound:CoordinatorPropositionPropagationWaitTimedOut] :: TimedOut -> ByVotingRound
AuxiliaryMessagePropagationWaitTimedOut :: ByVotingRound -> TimedOut
[$sel:byVotingRound:CoordinatorPropositionPropagationWaitTimedOut] :: TimedOut -> ByVotingRound
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Voting.TimedOut.TimedOut
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Voting.TimedOut.TimedOut
instance GHC.Generics.Generic Dolla.Consensus.Voting.TimedOut.TimedOut
instance GHC.Show.Show Dolla.Consensus.Voting.TimedOut.TimedOut
instance GHC.Classes.Eq Dolla.Consensus.Voting.TimedOut.TimedOut
instance Dolla.Libraries.LogEngine.Appendable.Appendable Dolla.Consensus.Voting.TimedOut.TimedOut

module Dolla.Consensus.Voting.Vote
data Vote
Accept :: Vote
Reject :: Vote
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Consensus.Voting.Vote.Vote
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Consensus.Voting.Vote.Vote
instance GHC.Generics.Generic Dolla.Consensus.Voting.Vote.Vote
instance GHC.Show.Show Dolla.Consensus.Voting.Vote.Vote
instance GHC.Classes.Eq Dolla.Consensus.Voting.Vote.Vote

module Dolla.Team.Consensus.Maestro.Output
data Output
ProposalAccepted :: ByProposer -> Output
[$sel:byProposer:ProposalAccepted] :: Output -> ByProposer
ProposalRejectedAndNeverReceived :: ByProposer -> Output
[$sel:byProposer:ProposalAccepted] :: Output -> ByProposer
ProposalRejected :: ByProposer -> Output
[$sel:byProposer:ProposalAccepted] :: Output -> ByProposer
ProposalReadyForVote :: ByProposer -> Vote -> Output
[$sel:byProposer:ProposalAccepted] :: Output -> ByProposer
[$sel:vote:ProposalAccepted] :: Output -> Vote
ConsensusReached :: ByBlockOffset -> Output
[$sel:byBlockOffset:ProposalAccepted] :: Output -> ByBlockOffset
instance Data.Aeson.Types.FromJSON.FromJSON Dolla.Team.Consensus.Maestro.Output.Output
instance Data.Aeson.Types.ToJSON.ToJSON Dolla.Team.Consensus.Maestro.Output.Output
instance GHC.Generics.Generic Dolla.Team.Consensus.Maestro.Output.Output
instance GHC.Show.Show Dolla.Team.Consensus.Maestro.Output.Output
instance GHC.Classes.Eq Dolla.Team.Consensus.Maestro.Output.Output
instance Dolla.Libraries.LogEngine.Appendable.Appendable Dolla.Team.Consensus.Maestro.Output.Output
